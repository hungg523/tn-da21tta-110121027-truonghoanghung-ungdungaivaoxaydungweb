name: Create Pull Request, Merge, and Build Docker

on:
  push:
    branches:
      - dev

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # Step 1: Checkout repository to work with dev branch
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Create Pull Request from dev to main
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}
          commit-message: Update report
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: main
          delete-branch: false
          title: 'Update report'
          body: |
            Update report
            - Updated with *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/hungg523
          labels: |
            automated pr
          milestone: 1
          draft: false

  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: assetservice
            path: AssetService/AssetService/Dockerfile
            tag: appleshop-assets-server
          - name: auth-command
            path: ./src/AuthService/command/AppleShop.auth.commandApi/Dockerfile
            tag: appleshop-auth
          - name: cart-command
            path: ./src/CartService/command/AppleShop.cart.commandApi/Dockerfile
            tag: appleshop-cart-command
          - name: cart-query
            path: ./src/CartService/query/AppleShop.cart.queryApi/Dockerfile
            tag: appleshop-cart-query
          - name: category-command
            path: ./src/CategoryService/command/AppleShop.category.commandApi/Dockerfile
            tag: appleshop-category-command
          - name: category-query
            path: ./src/CategoryService/query/AppleShop.category.queryApi/Dockerfile
            tag: appleshop-category-query
          - name: inventory-command
            path: ./src/InventoryService/command/AppleShop.inventory.commandApi/Dockerfile
            tag: appleshop-inventory-command
          - name: inventory-query
            path: ./src/InventoryService/query/AppleShop.inventory.queryApi/Dockerfile
            tag: appleshop-inventory-query
          - name: order-command
            path: ./src/OrderService/command/AppleShop.order.commandApi/Dockerfile
            tag: appleshop-order-command
          - name: order-query
            path: ./src/OrderService/query/AppleShop.order.queryApi/Dockerfile
            tag: appleshop-order-query
          - name: product-command
            path: ./src/ProductService/command/AppleShop.product.commandApi/Dockerfile
            tag: appleshop-product-command
          - name: product-query
            path: ./src/ProductService/query/AppleShop.product.queryApi/Dockerfile
            tag: appleshop-product-query
          - name: promotion-command
            path: ./src/PromotionService/command/AppleShop.promotion.commandApi/Dockerfile
            tag: appleshop-promotion-command
          - name: promotion-query
            path: ./src/PromotionService/query/AppleShop.promotion.queryApi/Dockerfile
            tag: appleshop-promotion-query
          - name: user-command
            path: ./src/UserService/command/AppleShop.user.commandApi/Dockerfile
            tag: appleshop-user-command
          - name: user-query
            path: ./src/UserService/query/AppleShop.user.queryApi/Dockerfile
            tag: appleshop-user-query
    env:
        DOCKER_USERNAME: lolmobi495
    steps:
        # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

        # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-docker-${{ matrix.service.name }}
            restore-keys: |
              ${{ runner.os }}-docker-

        # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ env.DOCKER_USERNAME }}
            password: ${{ secrets.ACTION }}

        # Build Docker images
      - name: Build Docker Images
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ${{ matrix.service.path }}
            tags: ${{ env.DOCKER_USERNAME }}/doan:${{ matrix.service.tag }}
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

        # Push Docker images
      - name: Push Docker Images
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ${{ matrix.service.path }}
            push: true
            tags: ${{ env.DOCKER_USERNAME }}/doan:${{ matrix.service.tag }}

        # Prune Docker builder cache
      - name: Prune Docker builder cache
        run: docker builder prune -f

        # Prune unused Docker images
      - name: Remove unused Docker images
        run: docker image prune -f